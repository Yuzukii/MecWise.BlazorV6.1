import{D as t}from"./dom-a06f5987.js";class e extends HTMLElement{constructor(){super(),this.scrollContext={vertScrollBarHeight:-1,vertScrollThumbHeight:-1,vertScrollThumbTop:0},this.verticalScrollBarElement=this.getVerticalScrollBarElement(),this.verticalScrollBarElement.addEventListener("click",this.onVerticalScrollBarClick.bind(this)),this.contentContainerElement=this.querySelector(".dx-scroll-viewer-content")}get headerSelector(){return this.getAttribute("header-selector")}get footerSelector(){return this.getAttribute("footer-selector")}connectedCallback(){this.prepareVerticalScrollBarPosition(),this.scrollContext=this.createScrollContext();this.getVerticalScrollBarThumbElement().style.height=`${this.scrollContext.vertScrollThumbHeight}px`,this.contentContainerElement.addEventListener("scroll",this.onContentScroll.bind(this))}prepareVerticalScrollBarPosition(){this.verticalScrollBarElement.style.top=this.getVerticalScrollTopPosition()+"px",this.verticalScrollBarElement.style.bottom=this.getVerticalScrollBottomPosition()+"px",t.addClassName(this.verticalScrollBarElement,"active")}onContentScroll(t){const e=this.getVerticalScrollBarThumbElement();this.scrollContext.vertScrollThumbTop=this.calculateVerticalScrollThumbTop(this.scrollContext.vertScrollBarHeight,this.scrollContext.vertScrollThumbHeight),e.style.transform=`translate(0, ${this.scrollContext.vertScrollThumbTop}px)`}onVerticalScrollBarClick(t){const e=this.convertClickXToScrollTop(t.offsetY);this.contentContainerElement.scroll({top:e,behavior:"smooth"})}getVerticalScrollBarElement(){return this.querySelector(".dx-scroll-viewer-vert-scroll-bar")}getVerticalScrollBarThumbElement(){return this.querySelector(".dx-scroll-viewer-vert-scroll-thumb")}getVerticalScrollTopPosition(){return this.getElementHeight(this.headerSelector)}getVerticalScrollBottomPosition(){return this.getElementHeight(this.footerSelector)}getElementHeight(t){const e=t&&this.querySelector(t)||null;return e?e.clientHeight:0}createScrollContext(){const t=this.getVerticalScrollBarElement().clientHeight,e=this.calculateVerticalScrollThumbHeight(t);return{vertScrollBarHeight:t,vertScrollThumbTop:this.calculateVerticalScrollThumbTop(t,e),vertScrollThumbHeight:e}}calculateVerticalScrollThumbHeight(t){return t*t/this.contentContainerElement.scrollHeight}calculateVerticalScrollThumbTop(t,e){return t*((this.contentContainerElement.scrollTop+t)/this.contentContainerElement.scrollHeight)-e}convertClickXToScrollTop(t){return(t+this.scrollContext.vertScrollThumbHeight/2)/this.scrollContext.vertScrollBarHeight*this.contentContainerElement.scrollHeight-this.scrollContext.vertScrollBarHeight}}customElements.define("dx-scroll-viewer",e);const l={loadModule:function(){}};export default l;export{e as DxScrollViewer};
